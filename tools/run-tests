#!/usr/bin/env node
'use strict';
const path = require('path');
const fs = require('fs');
const glob = require('glob');
const argparser = require('../app/argparser');
const env = require('../app/env');

env.setEnv('tests', true);
env.setEnv('mode', 'test');
const TEST_DIR = path.resolve(__dirname, '../test');
const args = argparser(`
Run node tests:

Usage:
./tools/run-tests file-one.js file-two.js
./tools/run-tests # to run all the tests
`);

args.parse();
let jsFiles = args.nargs;
if (!jsFiles) {
  jsFiles = glob.sync('test/node-tests/**/*.js')
    .map(file => file.replace('test/', ''));
}

// add .js at the end if doesn't already exist.
jsFiles = jsFiles.map(file => {
  if (!file.endsWith('.js')) {
    return file + '.js';
  }

  return file;
});

// set globals
global.assert = require('assert');
global.fixtures = require('../test/fixtures');

jsFiles.forEach(file => {
  file = path.join(TEST_DIR, file);
  if (!fs.existsSync(file)) {
    console.error(`Test file ${file} does not exsist.`);
    process.exit(1);
  }

  console.log('running test file: ', path.basename(file));
  require(file);
});
